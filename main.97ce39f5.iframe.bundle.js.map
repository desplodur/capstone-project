{"version":3,"file":"main.97ce39f5.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA;;;;;;;;;;;;;;ACdA;;;;;AAMA;;;;;;;;;;;;;;ACPA;;;;;;AAQA;;;;;;;;;;;;;;AAgBA;;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;;;;AAMA;;AAIA;;;;ACvBA","sources":["webpack://react-app/./src/components/Form/styled.js","webpack://react-app/./src/components/Profile/styled.js","webpack://react-app/./src/components/Button/styled.js","webpack://react-app/./src/components/QuestionCard/styled.js","webpack://react-app/./src/components/QuestionCard/index.js"],"sourcesContent":["import styled, {css} from 'styled-components';\n\nconst StyledForm = styled.form`\n\tdisplay: flex;\n\twidth: 70vw;\n\theight: 2em;\n\tinput {\n\t\twidth: 95em;\n\t\theight: 100%;\n\t\tborder: 2px solid var(--dark);\n\t\tborder-radius: 5px 0 0 5px;\n\t\tbackground-color: var(--light);\n\t}\n\tbutton {\n\t\twidth: 5em;\n\t\theight: 100%;\n\t\tborder: 2px solid var(--dark);\n\t\tborder-radius: 0 5px 5px 0;\n\t\tbackground-color: var(--dark);\n\t\tcolor: var(--light);\n\t}\n\n\t${props =>\n\t\tprops.fixedForm &&\n\t\tcss`\n\t\t\twidth: 100%;\n\t\t\tpadding: 0 1em 0 1em;\n\t\t\tposition: fixed;\n\t\t\tbottom: 0;\n\t\t\tright: 0;\n\t\t\tmargin-bottom: 12vh;\n\t\t`}\n`;\n\nexport default StyledForm;\n","import styled from 'styled-components';\n\nexport const StyledProfile = styled.section`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\theight: 80vh;\n\tmargin: 0 auto;\n`;\nexport const StyledProfilePicture = styled.img`\n\twidth: 30vh;\n\tmargin: 2em;\n\tborder: 0.1em solid var(--dark);\n\tborder-radius: 100%;\n`;\n\nexport const LogoutButton = styled.button`\n\twidth: 8em;\n\tmargin: 1em;\n\tpadding: 0.5em;\n\tborder: none;\n\tborder-radius: 8px;\n\tbackground-color: var(--dark);\n\tcolor: var(--light);\n\tfont-size: 2rem;\n`;\n","import styled, {css} from 'styled-components';\n\nconst StyledButton = styled.button`\n\tborder: none;\n\tbackground-color: transparent;\n\tcolor: var(--light);\n\tfont-size: 1em;\n\t${props =>\n\t\tprops.submitButton &&\n\t\tcss`\n\t\t\theight: 100%;\n\t\t\tborder: 2px solid var(--dark);\n\t\t\tborder-radius: 0 5px 5px 0;\n\t\t\tbackground-color: var(--dark);\n\t\t`}\n\t${props =>\n\t\tprops.greyButton &&\n\t\tcss`\n\t\t\twidth: 100%;\n\t\t\tpadding: 0.5em 0 0.5em 0;\n\t\t\tfont-size: 1.2rem;\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tjustify-content: center;\n\t\t\tborder-radius: 0 0 8px 8px;\n\t\t\tbackground-color: var(--dark);\n\t\t\t:hover {\n\t\t\t\tbackground-color: var(--darktHover);\n\t\t\t}\n\t\t`}\n\t\n\t${props =>\n\t\tprops.editButtonSmall &&\n\t\tcss`\n\t\t\tfont-size: 0.4rem;\n\t\t`}\n\t\t${props =>\n\t\tprops.loginButton &&\n\t\tcss`\n\t\t\tfont-size: 2rem;\n\t\t\tbackground-color: var(--dark);\n\t\t\tmargin: 1em;\n\t\t\tpadding: 1em;\n\t\t\tborder-radius: 8px;\n\t\t`}\n`;\nexport default StyledButton;\n","import styled, {css} from 'styled-components';\n\nexport const StyledQuestionCard = styled.section`\n\tdisplay: flex;\n\tposition: relative;\n\tflex-direction: column;\n\tjustify-content: space-between;\n\twidth: 85vw;\n\tmin-height: 8em;\n\tmargin: 0.5em 0 0.5em 0;\n\tborder: var(--dark);\n\tborder-radius: 8px;\n\tbackground-color: var(--blue);\n\tcolor: var(--light);\n\n\timg#statusIndicator {\n\t\tposition: absolute;\n\t\ttop: 5px;\n\t\tright: 5px;\n\t}\n\n\t${props =>\n\t\tprops.ownedQuestion &&\n\t\tcss`\n\t\t\tbackground-color: var(--lightblue);\n\t\t\tcolor: var(--dark);\n\t\t`}\n`;\n\nexport const StyledContent = styled.div`\n\tpadding: 1em 4em 1em 1em;\n`;\n\nexport const StatusIndicator = styled.img`\n\tposition: absolute;\n\ttop: 5px;\n\tright: 5px;\n`;\n","import {useNavigate} from 'react-router-dom';\n\nimport Button from '../Button';\n\nimport {StyledQuestionCard} from './styled';\nimport {StyledContent} from './styled';\nimport {StatusIndicator} from './styled';\n\nexport default function QuestionCard({question, ...props}) {\n\tconst navigate = useNavigate();\n\n\treturn (\n\t\t<StyledQuestionCard {...props}>\n\t\t\t<StyledContent>\n\t\t\t\t<h4>{question.questionText}</h4>\n\t\t\t\t<StatusIndicator\n\t\t\t\t\tsrc={\n\t\t\t\t\t\tquestion.answered\n\t\t\t\t\t\t\t? require('../../utils/icons/statusOpen.svg').default\n\t\t\t\t\t\t\t: require('../../utils/icons/statusClosed.svg').default\n\t\t\t\t\t}\n\t\t\t\t\talt={question.answered ? 'Open' : 'Closed '}\n\t\t\t\t/>\n\t\t\t</StyledContent>\n\t\t\t<Button\n\t\t\t\tgreyButton={true}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tnavigate('/' + question._id);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tGo to Question\n\t\t\t</Button>\n\t\t</StyledQuestionCard>\n\t);\n}\n"],"names":[],"sourceRoot":""}